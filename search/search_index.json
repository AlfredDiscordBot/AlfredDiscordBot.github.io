{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#all-in-one-discord-bot","title":"All in One Discord bot","text":"<p>It is so great to see that the bot crossed 250,000 users and 300 servers in the past few days, I would like to thank all developers and users of Alfred. </p> <p>If you want to contribute to this project, please read through Contribution page, Have a great day</p> <p> </p> <p> Invite To Your Server Join Our Support Server</p> <p></p> <p>Message</p> <p>THIS BOT IS POWERED BY NEXTCORD'S LATEST VERSION  AND I WANT TO DEEPLY THANK THEM FOR TAKING UP THIS RESPONSIBILITY OF MAINTAINING THIS LIBRARY.  THEY'VE BEEN VERY SUPPORTIVE AND HAS PLAYED A ROLE IN SHAPING THE ALFRED  YOU SEE TODAY</p>"},{"location":"Learn/","title":"Learn","text":""},{"location":"Learn/#information","title":"Information","text":"<p>Hey guys, I've build this bot for a good cause and if you want to contribute to this, you may need to know one or two things about Nextcord and a lot about Python </p> <p>Tip</p> <p>Alfred is good for learning purposes, it uses some of the most advanced features given by nextcord and Discord API itself</p> <p>We try to make Alfred fully async, and sometimes couldn't succeed because of certain errors and limitations in the <code>aiohttp</code> module (Use for async requests). But it is a must to make sure that all the functions you create must be asynchronous as much as possible</p>"},{"location":"Learn/#files-and-folder-structure","title":"Files and folder structure","text":"<ul> <li>In  <code>requirements.txt</code>, nextcord is set in a way that it updates whenever there's a restart without specifying the version</li> <li> <code>External Functions</code>, this file has been moved to the <code>Utils/</code> folder for a purpose, this file is just a support to the  <code>main_program.py</code>, so basically all the support functions and classes can go into this, like if you see the class Meaning or ProtonDB, this can be accessed as</li> <li> <code>Assets.py</code> is a new file created, which currently contains interaction components and emotes class, So if you want to pick let's say something like the upvote emoji, you can use <code>assets.Emotes(client).upvote</code></li> <li>Helping hand has the help page embeds, you can go through it, it's not much to know about</li> <li> <code>Post.py</code> and spotify clients are helpers,  <code>post.py</code> is for instagram</li> <li> Cogs are added to alfred very recently</li> </ul>"},{"location":"Learn/#here-are-some-important-functions-that-youll-see","title":"Here are some important functions that you'll see","text":"<ul> <li><code>cembed()</code>  Easier way for creating an embed, you can give title, color (value or <code>nextcord.Color</code>), etc</li> <li><code>assets.pa()</code>     Made a function for pages, this function is used in help and FUN APIs. Pass in <code>ctx</code>, <code>embeds</code> as arguments</li> </ul>"},{"location":"Learn/#commands-and-slash-commands","title":"Commands and slash commands","text":""},{"location":"Learn/#heres-how-you-create-a-normal-command","title":"Here's how you create a normal command","text":"<pre><code>@client.command(aliases = ['b'])\nasync def command_name(ctx, arg1, arg2, arg3, *, args):\n'''\n  Ctx or as people call it, context is an important parameter\n  It's compulsory and it comes in the beginning\n  It has most of the info like channel/user IDS, if you're a developer of Alfred\n  Check it out using dir(ctx)\n  '''\n  # to send a message\n  await ctx.send(\"text\")\n  await ctx.send(embed=cembed(description='Hello'))\n  # over here, you can do anything and the function will be called\n</code></pre>"},{"location":"Learn/#heres-how-you-create-a-slash-command","title":"Here's how you create a slash command","text":"<pre><code>@client.slash_command(name=\"name\",description=\"This is a slash command\")\nasync def sl(inter: nextcord.Interaction, arg1, default_arg = \"Here\"):\n'''\n  This is a little different from ctx, this is Interaction\n  User is used instead of author\n  Has an attribute called response\n  and original message\n  '''\n  await inter.send(\"Hellow world\")\n  # To edit a message\n  await inter.response.edit_message(\"Hello world\")\n</code></pre>"},{"location":"Learn/#cogs","title":"Cogs","text":"<p>Cogs is an easy way to divide the program so that it doesn't look crowded in the main program. There's a basic structure to it.</p> <pre><code># All imports here, I would import External_functions, \n# nextcord and nextcord.ext.commands all that\nimport nextcord\nfrom nextcord.ext import commands, tasks\nimport utils.External_functions as ef # has cembed(), API classes\nimport utils.assets as assets # has pa(ctx, embeds) Pagination buttons\n\n# This is called at first by Alfred, if you need some local variables, \n# like dev_channel, must only be used for passing constants\ndef requirements():\n    return [\"variable_name\"]\n\nclass CogName(commands.Cog):\n    def __init__(self, client, variable_name):\n        self.client = client\n\n    @nextcord.slash_command(name=\"test\",description=\"Description\")\n    async def test_slash(self, interaction, arg):\n        # ... Alfred is thinking\n        await interaction.response.defer()\n        await interaction.response.send_message(\"Hello\")\n\n    @commands.command(aliases=['te'])\n    async def test(self, ctx, arg1, *, everything_else):\n        await ctx.send(\"Hello\")\n\ndef setup(client, **kwargs):\n    client.add_cog(CogName(client, **kwargs))\n</code></pre> <p>WARNING</p> <p>PLEASE DON'T COPY PASTE THIS CODE AS IT'S INDENTATION IS ONLY 2 SPACES, ALFRED BY DEFAULT USES 4 AND IF YOU DO, IT COULD MESS YOUR EDIT AND WILL HAVE TO REMOVE THE LINES OR RESET</p>"},{"location":"Privacy_Policy/","title":"Your data is yours","text":""},{"location":"Privacy_Policy/#message-from-the-developer","title":"Message from the Developer","text":"<p>You do not have to worry about anything, you can choose to not give us any data, it is possible to stay incognito using alfred \\ We have snipe and AI feature, and none of these actually stores your information permanently. We store your guild ids for music and certain configuration like advanced security, i.e. if you enable it, by default, it comes as a clean slate. The music queue remains as it is. There's playlist for individuals, so we'll need user ID for that, or you can just not use the playlist feature</p>"},{"location":"Privacy_Policy/#support-server","title":"Support server","text":"<p>Now, you can have a look at the data we save, just by coming to our Support server.</p>"},{"location":"Privacy_Policy/#cleaning-you-data","title":"Cleaning you data","text":"<p>If you're an owner of Alfred's mutual server, you need to prove that and we'll show you details about the server only, if you came in as a user, I can show you all the variables that you are in. We may need time to process that data </p> <p>WE ONLY ANSWER TO THE SERVER OWNER AND NOT THE MODS OF THE SERVER ABOUT GUILD/SERVER INFORMATION</p> <p>It's YOUR choice to remove your details from certain variable, have fun and have a nice day</p>"},{"location":"Privacy_Policy/#intents-and-information-regarding-intents","title":"Intents and Information regarding intents","text":"<p>We have message intent enabled as there's an AI which will respond to you, you can opt out of it using <code>'response</code>, it's a toggle switch, and when you edit a message to a command, this will auto respond to it. And unfortunately, on_reaction_add requires the message intent, which is a great part in alfred</p> <p>Guild members intent is enabled for features like tickets, welcome messages and to know if the user is in a voice channel. It's for you to not get rickrolled</p>"},{"location":"Privacy_Policy/#heres-a-list-of-everything-we-collect","title":"Here's a list of everything we collect","text":"<ul> <li> Channel IDs for updates like security alert </li> <li> Channel and Server IDs for configuration</li> <li> Server IDs for prefix <code>[Optional]</code></li> </ul> <p>If you see above, most of these are Server, User and Channel IDs, we do not store anything specific like list of channels, messages, etc.</p> <p>All of these are optional, Alfred is a moderation, and memes bot, and we get your concern about your privacy, but it's as easy as joining our support server and opening a ticket.</p>"},{"location":"Privacy_Policy/#security-of-our-github-branchrepository","title":"Security of our Github Branch/Repository","text":"<p>We've added new rules to contributing to alfred-discord-bot official repository, you CANNOT send a pull request to our <code>default</code>1 branch, but will have to send it to the development2 branch. And must be signed by atleast 2 admins. Even If the owner/admin, creates a change</p> <ol> <li> <p><code>default</code> branch :  GitHub \u21a9</p> </li> <li> <p><code>development</code> branch :  GitHub \u21a9</p> </li> </ol>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing-to-alfreddiscordbotalfred","title":"Contributing to <code>AlfredDiscordBot/Alfred</code>","text":""},{"location":"contributing/#first-off-thanks-for-taking-the-time-to-contribute","title":"\ud83d\udc4d\ud83c\udf89 First off, thanks for taking the time to contribute! \ud83c\udf89\ud83d\udc4d","text":"<p>The following is a set of guidelines for contributing to  AlfredDiscordBot. These are mostly guidelines, not rules. Use your best judgment, and feel free to propose changes to this document in a pull request.</p>"},{"location":"contributing/#what-should-i-know-before-getting-started","title":"What should I know before getting started?","text":"<p>Alfred is a discord bot which is opensource and can do a lot of things. It has many features like instagram, reddit and music, it has some moderation commands, and it uses many wonderful APIs like transformers and wolfram(one of the best computing engine).</p> <p>We respect your privacy and made it open for you, if you want to modify code and suggest improvement, use the github to contribute.</p> <p>We are grateful for your contribution and thank you for accepting Alfred into your server, more than 70,000 users and 60 servers currently use Alfred, all thanks to you, the users and developers of Alfred</p>"},{"location":"contributing/#how-do-i-contribute","title":"How Do I Contribute?","text":""},{"location":"contributing/#reporting-bugs-suggesting-enhancements","title":"Reporting Bugs \ud83d\udc1b / Suggesting Enhancements \ud83e\udd16","text":"<p>To Report any bug or Suggest any Enhancement please open a new issue in the issues tab.</p>"},{"location":"contributing/#contribute-by-solving-issues-or-adding-new-features","title":"Contribute by solving issues or adding new features \ud83d\ude07","text":"<p>To contribute firstly fork this repo (GitHub account needed) and then clone this repository using <code>git clone</code> or any other method you perfer.</p> <p>find if there are any issues that you would like to resolve and get started coding, or get started coding the feature you would like to add.</p>"},{"location":"contributing/#thank-you-very-much-for-contributing","title":"\ud83e\udd17 Thank you very much for contributing","text":""}]}